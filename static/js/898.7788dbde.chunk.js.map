{"version":3,"file":"static/js/898.7788dbde.chunk.js","mappings":"kQAaA,EAboB,SAAHA,GAAyB,IAAnBC,EAAWD,EAAXC,YACrB,OAAOA,GAAeA,EAAYC,OAAS,EACzCD,EAAYE,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAEH,EAAFG,GAAE,OACpCC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,KACLK,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,MAFIC,EAGJ,KAGRG,EAAAA,EAAAA,KAAA,KAAAD,SAAG,OAEP,E,kBC8BA,EAnCgB,WACd,IAAAE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CV,EAAWY,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAiB,eAAA3B,GAAA4B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGF,OAHEF,EAAAC,KAAA,EAEtBV,GAAa,GACbJ,EAAgB,IAAIa,EAAAE,KAAA,GACDC,EAAAA,EAAAA,IAAqBX,GAAS,KAAD,EAA1CO,EAAIC,EAAAI,KACVrB,EAAegB,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE7Bb,EAAgBa,EAAAM,GAAMC,SAAS,QAEX,OAFWP,EAAAC,KAAA,GAE/BV,GAAa,GAAOS,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAXsB,OAAA9B,EAAA0C,MAAA,KAAAC,UAAA,KAYvBhB,GAdA,CAeF,GAAG,CAACH,KAGFhB,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAAnC,SAAA,CACGa,IAAaZ,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,KACrBnC,EAAAA,EAAAA,KAACoC,EAAW,CAAC7C,YAAaA,IACzBiB,IAAgBR,EAAAA,EAAAA,KAAA,MAAAD,SAAKS,MAG5B,C","sources":["components/ReviewsInfo/ReviewsInfo.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["const ReviewsInfo = ({ reviewsData }) => {\n  return reviewsData && reviewsData.length > 0 ? (\n    reviewsData.map(({ author, content, id }) => (\n      <div key={id}>\n        <h3>{author}</h3>\n        <p>{content}</p>\n      </div>\n    ))\n  ) : (\n    <p>N/A</p>\n  );\n};\n\nexport default ReviewsInfo;\n","import { getReviewsDetailsAPI } from 'api/dataMovies';\nimport Loader from 'components/Loader/Loader';\nimport ReviewsInfo from 'components/ReviewsInfo/ReviewsInfo';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviewsData, setReviewsData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const getReviewsDetails = async () => {\n      try {\n        setIsLoading(true);\n        setErrorMessage('');\n        const data = await getReviewsDetailsAPI(movieId);\n        setReviewsData(data.results);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewsDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader></Loader>}\n      <ReviewsInfo reviewsData={reviewsData} />\n      {errorMessage && <h1>{errorMessage}</h1>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["_ref","reviewsData","length","map","_ref2","author","content","id","_jsxs","children","_jsx","_useState","useState","_useState2","_slicedToArray","setReviewsData","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","useEffect","getReviewsDetails","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getReviewsDetailsAPI","sent","results","t0","message","finish","stop","apply","arguments","_Fragment","Loader","ReviewsInfo"],"sourceRoot":""}