{"version":3,"file":"static/js/810.c36cacbf.chunk.js","mappings":"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","sources":["components/MoviesInfo/MoviesInfo.jsx","pages/MovieDetails/MoviesDetails.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport { Link, NavLink, useLocation, useParams } from 'react-router-dom';\n\nconst MoviesInfo = ({ moviesData }) => {\n  const { title, vote_average, poster_path, overview, genres } = moviesData;\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://glavcom.ua/img/article/9139/95_main-v1678685008.jpg';\n\n  const location = useLocation();\n  const goBack = useRef(location.state?.from || '/');\n\n  return (\n    <>\n      <div>\n        <Link to={goBack.current}>Go back</Link>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : defaultImg\n          }\n          width={250}\n          alt=\"poster\"\n        />\n        <h2>{title}</h2>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        {overview !== '' ? <p>{overview}</p> : <p>N/A</p>}\n        <h4>Genres</h4>\n        <div>\n          {genres && genres.length > 0 ? (\n            genres.map(({ id, name }) => <p key={id}>{name}</p>)\n          ) : (\n            <p>N/A</p>\n          )}\n        </div>\n      </div>\n      <div>\n        <h5>Aditional information</h5>\n        <ul>\n          <li>\n            <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesInfo;\n","import { getMovieDetailsAPI } from 'api/dataMovies';\nimport Loader from 'components/Loader/Loader';\nimport MoviesInfo from 'components/MoviesInfo/MoviesInfo';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst MoviesDetails = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const getMoviesDetails = async () => {\n      try {\n        setIsLoading(true);\n        setErrorMessage('');\n        const data = await getMovieDetailsAPI(movieId);\n        setMoviesData(data);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMoviesDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader></Loader>}\n      <MoviesInfo moviesData={moviesData}></MoviesInfo>\n      {errorMessage && <h1>{errorMessage}</h1>}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["_ref","_location$state","moviesData","title","vote_average","poster_path","overview","genres","movieId","useParams","location","useLocation","goBack","useRef","state","from","_jsxs","_Fragment","children","_jsx","Link","to","current","src","concat","width","alt","Math","round","length","map","_ref2","id","name","NavLink","_useState","useState","_useState2","_slicedToArray","setMoviesData","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","isLoading","setIsLoading","useEffect","getMoviesDetails","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieDetailsAPI","sent","t0","message","finish","stop","apply","arguments","Loader","MoviesInfo","Outlet"],"sourceRoot":""}