{"version":3,"file":"static/js/600.0c4525d6.chunk.js","mappings":"2QACA,EAA8B,gCAA9B,EAA6E,iCAA7E,EAAqI,yC,SCwCrI,EAtCmB,SAAHA,GAA0B,IAApBC,EAAYD,EAAZC,aACpBC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAY9BI,EAAY,WAChBD,EAAgB,GAClB,EACA,OACEE,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAoBC,SAfhB,SAAAC,GACvBA,EAAIC,iBACJf,EAAaK,GACbE,GACF,EAWoEE,SAAA,EAC9DD,EAAAA,EAAAA,KAAA,SACEQ,MAAOX,EACPY,SAAU,SAAAH,GAAG,OAZA,SAAAA,GACnBR,EAAgBQ,EAAII,OAAOF,MAC7B,CAUyBG,CAAaL,EAAI,EAClCH,UAAWC,EACXQ,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAQ,KAEVjB,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASV,UAAWC,EAA4BH,SAAC,eAMtE,E,iBCYA,EA5CmB,WACjB,IAAAiB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAxB,EAAAA,EAAAA,GAAAsB,EAAA,GAAlDrB,EAAYuB,EAAA,GAAEtB,EAAesB,EAAA,GACpC3B,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3C4B,EAAU1B,EAAA,GAAE2B,EAAa3B,EAAA,GAChC4B,GAAwC7B,EAAAA,EAAAA,UAAS,IAAG8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCjC,EAAAA,EAAAA,WAAS,GAAMkC,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQnC,EAAaoC,IAAI,SAE/B,GAAKD,EAAL,CAIA,IAAME,EAAe,eAAA3C,GAAA4C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGA,OAHAF,EAAAC,KAAA,EAEpBX,GAAa,GACbJ,EAAgB,IAAIc,EAAAE,KAAA,GACDC,EAAAA,EAAAA,IAAkBX,GAAO,KAAD,EAArCM,EAAIE,EAAAI,KACFL,EAAYD,EAAZC,QACRjB,EAAciB,GAASC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAEvBd,EAAgBc,EAAAK,GAAMC,SAAS,QAEX,OAFWN,EAAAC,KAAA,GAE/BX,GAAa,GAAOU,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,yBAEvB,kBAZoB,OAAA9C,EAAA0D,MAAA,KAAAC,UAAA,KAarBhB,GAfA,CAgBF,GAAG,CAACrC,IAMJ,OACEK,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAAlD,SAAA,CACG4B,IAAa7B,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,KACrBpD,EAAAA,EAAAA,KAACqD,EAAU,CAAC7D,aAPK,SAAAgB,GACnBV,EAAgB,CAAEkC,MAAOxB,GAC3B,IAMKa,IAAcrB,EAAAA,EAAAA,KAACsD,EAAAA,EAAU,CAACjC,WAAYA,IACtCI,IAAgBzB,EAAAA,EAAAA,KAAA,MAAAC,SAAKwB,KACtBzB,EAAAA,EAAAA,KAACuD,EAAAA,GAAM,MAGb,C","sources":["webpack://goit-react-woolf-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search-form\":\"SearchForm_search-form__r9IAD\",\"search-imput\":\"SearchForm_search-imput__zz8bV\",\"search-button-submit\":\"SearchForm_search-button-submit__59+d+\"};","import { useState } from 'react';\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ handleSubmit }) => {\n  const [searchParams, setSearchParams] = useState('');\n\n  const handleSubmitForm = evt => {\n    evt.preventDefault();\n    handleSubmit(searchParams);\n    resetForm();\n  };\n\n  const handleChange = evt => {\n    setSearchParams(evt.target.value);\n  };\n\n  const resetForm = () => {\n    setSearchParams('');\n  };\n  return (\n    <div>\n      <form className={css['search-form']} onSubmit={handleSubmitForm}>\n        <input\n          value={searchParams}\n          onChange={evt => handleChange(evt)}\n          className={css['search-imput']}\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          required\n        />\n        <button type=\"submit\" className={css['search-button-submit']}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { getMovieSearchAPI } from 'api/dataMovies';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesData, setMoviesData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (!query) {\n      return;\n    }\n\n    const getSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        setErrorMessage('');\n        const data = await getMovieSearchAPI(query);\n        const { results } = data;\n        setMoviesData(results);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearchMovies();\n  }, [searchParams]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      {isLoading && <Loader></Loader>}\n      <SearchForm handleSubmit={handleSubmit}></SearchForm>\n      {moviesData && <MoviesList moviesData={moviesData}></MoviesList>}\n      {errorMessage && <h1>{errorMessage}</h1>}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["_ref","handleSubmit","_useState","useState","_useState2","_slicedToArray","searchParams","setSearchParams","resetForm","_jsx","children","_jsxs","className","css","onSubmit","evt","preventDefault","value","onChange","target","handleChange","name","type","autoComplete","autoFocus","placeholder","required","_useSearchParams","useSearchParams","_useSearchParams2","moviesData","setMoviesData","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","isLoading","setIsLoading","useEffect","query","get","getSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","results","_context","prev","next","getMovieSearchAPI","sent","t0","message","finish","stop","apply","arguments","_Fragment","Loader","SearchForm","MoviesList","Outlet"],"sourceRoot":""}